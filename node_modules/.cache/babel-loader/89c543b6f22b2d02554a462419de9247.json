{"ast":null,"code":"import _objectSpread from \"/Users/usuario/rappi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  filters: {\n    sublevels: [],\n    available: true,\n    minPrice: null,\n    maxPrice: null,\n    minStock: null,\n    maxStock: null\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_SUBLEVEL':\n      return _objectSpread({}, state, {\n        filters: _objectSpread({}, state.filters, {\n          sublevels: action.sublevels\n        })\n      });\n\n    case 'SET_AVAILABILITY':\n      return _objectSpread({}, state, {\n        filters: _objectSpread({}, state.filters, {\n          available: action.available\n        })\n      });\n\n    case 'SET_PRICES':\n      return _objectSpread({}, state, {\n        filters: _objectSpread({}, state.filters, {\n          minPrice: action.minPrice,\n          maxPrice: action.maxPrice\n        })\n      });\n\n    case 'SET_STOCKS':\n      return _objectSpread({}, state, {\n        filters: _objectSpread({}, state.filters, {\n          minStock: action.minStock,\n          maxStock: action.maxStock\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/usuario/rappi/src/modules/app/store/reducers/filterReducer.js"],"names":["initialState","filters","sublevels","available","minPrice","maxPrice","minStock","maxStock","reducer","state","action","type"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,EADJ;AAEPC,IAAAA,SAAS,EAAE,IAFJ;AAGPC,IAAAA,QAAQ,EAAE,IAHH;AAIPC,IAAAA,QAAQ,EAAE,IAJH;AAKPC,IAAAA,QAAQ,EAAE,IALH;AAMPC,IAAAA,QAAQ,EAAE;AANH;AADU,CAArB;;AAWA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,+BACKF,KADL;AAEER,QAAAA,OAAO,oBACFQ,KAAK,CAACR,OADJ;AAELC,UAAAA,SAAS,EAAEQ,MAAM,CAACR;AAFb;AAFT;;AAOF,SAAK,kBAAL;AACE,+BACKO,KADL;AAEER,QAAAA,OAAO,oBACFQ,KAAK,CAACR,OADJ;AAELE,UAAAA,SAAS,EAAEO,MAAM,CAACP;AAFb;AAFT;;AAOF,SAAK,YAAL;AACE,+BACKM,KADL;AAEER,QAAAA,OAAO,oBACFQ,KAAK,CAACR,OADJ;AAELG,UAAAA,QAAQ,EAAEM,MAAM,CAACN,QAFZ;AAGLC,UAAAA,QAAQ,EAAEK,MAAM,CAACL;AAHZ;AAFT;;AAQF,SAAK,YAAL;AACE,+BACKI,KADL;AAEER,QAAAA,OAAO,oBACFQ,KAAK,CAACR,OADJ;AAELK,UAAAA,QAAQ,EAAEI,MAAM,CAACJ,QAFZ;AAGLC,UAAAA,QAAQ,EAAEG,MAAM,CAACH;AAHZ;AAFT;;AAQF;AACE,aAAOE,KAAP;AApCJ;AAsCD,CAvCD;;AAyCA,eAAeD,OAAf","sourcesContent":["const initialState = {\n  filters: {\n    sublevels: [],\n    available: true,\n    minPrice: null,\n    maxPrice: null,\n    minStock: null,\n    maxStock: null,\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_SUBLEVEL':\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          sublevels: action.sublevels\n        }\n      };\n    case 'SET_AVAILABILITY':\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          available: action.available,\n        }\n      };\n    case 'SET_PRICES':\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          minPrice: action.minPrice,\n          maxPrice: action.maxPrice,\n        }\n      };\n    case 'SET_STOCKS':\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          minStock: action.minStock,\n          maxStock: action.maxStock,\n        }\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}