{"ast":null,"code":"var _jsxFileName = \"/Users/usuario/rappi/src/modules/app/products/Products.js\";\nimport React from 'react';\nimport Product from './product/Product';\nimport { formatPrice } from '../utils/numbers';\n\nconst filterProducts = (products, filters) => {\n  const sublevels = filters.sublevels,\n        available = filters.available,\n        minPrice = filters.minPrice,\n        maxPrice = filters.maxPrice,\n        minStock = filters.minStock,\n        maxStock = filters.maxStock;\n  return products.filter(product => {\n    return (!sublevels.length || sublevels.includes(product.sublevel_id)) && (!available || product.available === available) && (!minPrice || formatPrice(product.price) >= minPrice) && (!maxPrice || formatPrice(product.price) <= maxPrice) && (!minStock || product.quantity >= minStock) && (!maxStock || product.quantity <= minStock);\n  });\n}; // Just by ascending order, for example purpose\n\n\nconst orderProducts = (products, priority) => {\n  priority.map(criteria => products.sort((a, b) => {\n    if (criteria === 'price') {\n      return formatPrice(a[criteria]) - formatPrice(b[criteria]);\n    }\n\n    return a[criteria] - b[criteria];\n  }));\n  return products;\n};\n\nconst hasOrder = (criteria, priority) => {\n  return priority.includes(criteria) ? '*' : null;\n};\n\nconst Products = ({\n  products,\n  filters,\n  priority,\n  handleChange\n}) => {\n  const filteredProducts = filterProducts(products, filters);\n  const orderedFilteredProducts = orderProducts(filteredProducts, priority);\n  return React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    scope: \"col\",\n    onClick: () => handleChange('price'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Price \", hasOrder('price', priority)), React.createElement(\"th\", {\n    scope: \"col\",\n    onClick: () => handleChange('quantity'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Quantity \", hasOrder('quantity', priority)), React.createElement(\"th\", {\n    scope: \"col\",\n    onClick: () => handleChange('available'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"NA \", hasOrder('available', priority)))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, orderedFilteredProducts.map(product => React.createElement(Product, Object.assign({\n    key: product.id\n  }, product, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })))));\n};\n\nexport default Products;","map":{"version":3,"sources":["/Users/usuario/rappi/src/modules/app/products/Products.js"],"names":["React","Product","formatPrice","filterProducts","products","filters","sublevels","available","minPrice","maxPrice","minStock","maxStock","filter","product","length","includes","sublevel_id","price","quantity","orderProducts","priority","map","criteria","sort","a","b","hasOrder","Products","handleChange","filteredProducts","orderedFilteredProducts","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Product from './product/Product';\nimport { formatPrice } from '../utils/numbers';\n\nconst filterProducts = (products, filters) => {\n  const {\n    sublevels,\n    available,\n    minPrice,\n    maxPrice,\n    minStock,\n    maxStock\n  } = filters;\n\n  return products.filter(product => {\n    return (!sublevels.length || sublevels.includes(product.sublevel_id))\n      && (!available || product.available === available)\n      && (!minPrice || formatPrice(product.price) >= minPrice)\n      && (!maxPrice || formatPrice(product.price) <= maxPrice)\n      && (!minStock || product.quantity >= minStock)\n      && (!maxStock || product.quantity <= minStock)\n  });\n}\n\n// Just by ascending order, for example purpose\nconst orderProducts = (products, priority) => {\n  priority.map(criteria => products.sort((a, b) => {\n    if (criteria === 'price') {\n      return formatPrice(a[criteria]) - formatPrice(b[criteria])\n    }\n    return a[criteria] - b[criteria]\n  }));\n  return products;\n}\n\nconst hasOrder = (criteria, priority) => {\n  return priority.includes(criteria) ? '*' : null;\n}\n\nconst Products = ({ products, filters, priority, handleChange }) => {\n  const filteredProducts = filterProducts(products, filters);\n  const orderedFilteredProducts = orderProducts(filteredProducts, priority);\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\" onClick={() => handleChange('price')}>\n            Price {hasOrder('price', priority)}\n          </th>\n          <th scope=\"col\" onClick={() => handleChange('quantity')}>\n            Quantity {hasOrder('quantity', priority)}\n          </th>\n          <th scope=\"col\" onClick={() => handleChange('available')}>\n            NA {hasOrder('available', priority)}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {orderedFilteredProducts.map((product) => (\n          <Product key={product.id} {...product} />\n        ))}\n      </tbody>\n    </table>\n  )\n};\n\nexport default Products;"]},"metadata":{},"sourceType":"module"}